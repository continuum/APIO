- if !user_signed_in?
  .alert.info
    .container
      %p
        #{t(:to_upload_a_schema_please)}
        = link_to t(:identify_with_clave_unica), user_clave_unica_omniauth_authorize_path
- else
  = form_for @schema do |f|
    - if @schema.errors.any?
      .container-fluid.no-gutter{:class => "alert warning alert-dismissable fade in", :"data-alert" => "alert"}
        .row
          .container
            %button.close{"aria-hidden" => "true", "data-dismiss" => "alert", :type => "button"} Ã—
            %p= t(:cant_save_schema_error, count: @schema.errors.count)
            %ul
              - @schema.errors.full_messages.each do |message|
                %li= message
    .instance-panel
      .container
        .col-md-12{:class => "text-center"}
          .box-new-schema-file
            .box-title
              %span +
              %p= t(:create_schema)
            .input-group.box-input-file
              %label#label-file.input-group-btn
                %span#select-file.btn.btn-action-red.btn-lg= t(:choose_file)
                = f.file_field :spec_file, :style => 'display: none;', readonly: 'readonly'
              .field
                %input#input-file.form-control{:readonly => 'readonly', :type => 'text'}
              %span#remove-file
                %span.glyphicon.glyphicon-remove{":aria-hidden" => true}
    .container.new-schemas-container
      .row
        .col-md-6
          %h3= t(:enter_new_schema_name)
          = f.text_field :name, { :class => "form-control input-lg", :placeholder => t(:schema_name_example)}
        .col-md-6
          %h3= t(:enter_new_schema_category)
          = f.collection_select :schema_category_id, SchemaCategory.all, :id, :name, {:include_blank => false}, {:class => 'form-control input-lg'}
          %br
          .text-right
            = f.submit t(:create_schema), class: 'btn btn-action-red btn-lg',
              id: "create-schema"
